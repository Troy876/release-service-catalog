---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-update-trusted-tasks-success-multiple-tags
spec:
  description: |
    Run the update-trusted-tasks task with multiple tags
  workspaces:
    - name: tests-workspace
  tasks:
    - name: setup
      workspaces:
        - name: data
          workspace: tests-workspace
      taskSpec:
        workspaces:
          - name: data
        steps:
          - name: setup-values
            image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
            script: |
              #!/usr/bin/env sh
              set -eux

              mkdir "$(workspaces.data.path)/results"
              cat > "$(workspaces.data.path)/snapshot.json" << EOF
              {
                "application": "tasks",
                "artifacts": {},
                "components": [
                  {
                    "containerImage": "quay.io/example/echo-v01@sha256:abcde",
                    "name": "echo-v01",
                    "source": {
                      "git": {
                        "context": "task/echo/0.1",
                        "revision": "abcde",
                        "url": "https://example.com"
                      }
                    },
                    "repository": "quay.io/notexist/task-echo",
                    "tags": [
                      "0.1",
                      "test",
                      "stage"
                    ]
                  }
                ]
              }
              EOF

    - name: run-task
      taskRef:
        name: update-trusted-tasks
      params:
        - name: snapshotPath
          value: snapshot.json
      workspaces:
        - name: data
          workspace: tests-workspace
      runAfter:
        - setup
    - name: check-result
      workspaces:
        - name: data
          workspace: tests-workspace
      taskSpec:
        workspaces:
          - name: data
        steps:
          - name: check-result
            image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
            script: |
              #!/bin/bash
              set -eux

              if [ "$(wc -l < "$(workspaces.data.path)/mock_skopeo.txt")" != 3 ]; then
                echo Error: skopeo was expected to be called 1 times. Actual calls:
                cat "$(workspaces.data.path)/mock_skopeo.txt"
                exit 1
              fi

              if [ "$(wc -l < "$(workspaces.data.path)/mock_ec.txt")" != 3 ]; then
                echo Error: ec was expected to be called 1 time. Actual calls:
                cat "$(workspaces.data.path)/mock_ec.txt"
                exit 1
              fi

              all_found=true
              outs=(
                "track bundle --bundle quay.io/notexist/task-echo:0.1@sha256:abcde \
              --output oci:quay.io/notexist/data-acceptable-bundles:latest"

                "track bundle --bundle quay.io/notexist/task-echo:test@sha256:abcde \
              --output oci:quay.io/notexist/data-acceptable-bundles:latest"

                "track bundle --bundle quay.io/notexist/task-echo:stage@sha256:abcde \
              --output oci:quay.io/notexist/data-acceptable-bundles:latest"
              )
              
              for out in "${outs[@]}"; do
                if ! grep -qF -- "$out" "$(workspaces.data.path)/mock_ec.txt"; then
                  echo "Error: $out was not found in the ec command"
                  all_found=false
                fi
              done
              if ! $all_found; then
                cat "$(workspaces.data.path)/mock_ec.txt"
                exit 1
              fi 
      runAfter:
        - run-task
