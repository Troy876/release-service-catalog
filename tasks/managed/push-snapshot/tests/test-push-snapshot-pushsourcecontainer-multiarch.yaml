---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-push-snapshot-pushsourcecontainer-multiarch
spec:
  description: |
    Test push-snapshot with a multi-architecture main image and source container to ensure .src
     resolves and pushes without platform args.
  workspaces:
    - name: tests-workspace
  tasks:
    - name: setup
      workspaces:
        - name: data
          workspace: tests-workspace
      taskSpec:
        workspaces:
          - name: data
        steps:
          - name: setup-values
            image: quay.io/konflux-ci/release-service-utils:066a63d25546239e79533b99c83ff521a045c819
            script: |
              #!/usr/bin/env sh
              set -eux

              mkdir "$(workspaces.data.path)/results"
              cat > "$(workspaces.data.path)"/snapshot.json << EOF
              {
                "application": "multiarch-app",
                "components": [
                  {
                    "name": "multi-comp",
                    "containerImage": "reg.io/test@sha256:abcdefg",
                    "repository": "prod.io/loc",
                    "tags": ["multi-tag"],
                    "pushSourceContainer": true
                  }
                ]
              }
              EOF
              cat > "$(workspaces.data.path)"/data.json << EOF
              {
                "mapping": {}
              }
              EOF
    - name: run-task
      taskRef:
        name: push-snapshot
      params:
        - name: snapshotPath
          value: snapshot.json
        - name: dataPath
          value: data.json
        - name: retries
          value: "0"
        - name: resultsDirPath
          value: results
      workspaces:
        - name: data
          workspace: tests-workspace
      runAfter:
        - setup
    - name: check-result
      workspaces:
        - name: data
          workspace: tests-workspace
      taskSpec:
        workspaces:
          - name: data
        steps:
          - name: check-result
            image: quay.io/konflux-ci/release-service-utils:066a63d25546239e79533b99c83ff521a045c819
            script: |
              #!/usr/bin/env sh
              set -eux

              cat > "$(workspaces.data.path)"/cosign_expected_calls.txt << EOF
              copy -f reg.io/test@sha256:abcdefg prod.io/loc:multi-tag
              EOF

              if [ "$(md5sum < "$(workspaces.data.path)"/cosign_expected_calls.txt)" \
                != "$(md5sum < "$(workspaces.data.path)/mock_cosign.txt")" ]; then
                echo "Error: Expected cosign calls do not match actual calls"
                cat "$(workspaces.data.path)/mock_cosign.txt"
                echo "Expected:"
                cat "$(workspaces.data.path)"/cosign_expected_calls.txt
                exit 1
              fi

              grep "resolve --registry-config .* reg.io/test:sha256-abcdefg.src$" \
                "$(workspaces.data.path)/mock_oras.txt" || {
                echo "Error: Source .src resolution call missing or incorrect"
                exit 1
              }
              if grep "resolve --registry-config .* --platform .* reg.io/test:sha256-abcdefg.src" \
                "$(workspaces.data.path)/mock_oras.txt"; then
                echo "Error: Source .src resolution should not use --platform"
                exit 1
              fi

              grep "resolve --registry-config .* prod.io/loc:sha256-abcdefg.src$" \
                "$(workspaces.data.path)/mock_oras.txt" || {
                echo "Error: Initial .src push call missing or incorrect"
                exit 1
              }
              if grep "resolve --registry-config .* --platform .* prod.io/loc:sha256-abcdefg.src" \
                "$(workspaces.data.path)/mock_oras.txt"; then
                echo "Error: Initial .src push should not use --platform"
                exit 1
              fi

              grep "resolve --registry-config .* prod.io/loc:multi-tag-source$" \
                "$(workspaces.data.path)/mock_oras.txt" || {
                echo "Error: Tagged .src push call missing or incorrect"
                exit 1
              }
              if grep "resolve --registry-config .* --platform .* prod.io/loc:multi-tag-source" \
                "$(workspaces.data.path)/mock_oras.txt"; then
                echo "Error: Tagged .src push should not use --platform"
                exit 1
              fi
      runAfter:
        - run-task
