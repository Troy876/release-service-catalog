---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-add-fbc-contribution-multiple-components
spec:
  description: >
    Tests running the add-fbc-contribution when the snapshot has multi-components on it
  workspaces:
    - name: tests-workspace
  tasks:
    - name: setup
      workspaces:
        - name: data
          workspace: tests-workspace
      taskSpec:
        workspaces:
          - name: data
        steps:
          - name: setup-values
            image: quay.io/konflux-ci/release-service-utils:0f82be4be43294b6a96846d87ef7f7c0b9e34267
            script: |
              #!/usr/bin/env sh
              set -eux

              mkdir "$(workspaces.data.path)/results"
              cat > "$(workspaces.data.path)/snapshot_spec.json" << EOF
              {
                "application": "myapp",
                "components": [
                  {
                    "name": "comp0",
                    "containerImage": "registry.io/image0@sha256:0000",
                    "repository": "prod-registry.io/prod-location0",
                    "updatedTargetIndex": "quay.io/scoheb/fbc-target-index-testing:v4.12",
                    "ocpVersion": "v4.12"
                  },
                  {
                    "name": "comp1",
                    "containerImage": "registry.io/image1@sha256:0000",
                    "repository": "prod-registry.io/prod-location0",
                    "updatedTargetIndex": "quay.io/scoheb/fbc-target-index-testing:v4.13",
                    "ocpVersion": "v4.13"
                  }
                ]
              }
              EOF

              cat > "$(workspaces.data.path)/data.json" << EOF
              {
                "fbc": {
                  "fbcPublishingCredentials": "test-fbc-publishing-credentials",
                  "buildTimeoutSeconds": 420,
                  "requestTimeoutSeconds": 120
                }
              }
              EOF
    - name: run-task
      taskRef:
        name: add-fbc-contribution
      params:
        - name: fromIndex
          value: "quay.io/scoheb/fbc-index-testing:latest"
        - name: targetIndex
          value: "quay.io/scoheb/fbc-target-index-testing:v4.12"
        - name: pipelineRunUid
          value: $(context.pipelineRun.uid)
        - name: snapshotPath
          value: snapshot_spec.json
        - name: dataPath
          value: data.json
        - name: resultsDirPath
          value: results
        - name: taskGitUrl
          value: "http://localhost"
        - name: taskGitRevision
          value: "main"
      workspaces:
        - name: data
          workspace: tests-workspace
      runAfter:
        - setup
    - name: check-result
      params:
        - name: isFbcOptIn
          value: $(tasks.run-task.results.isFbcOptIn)
        - name: mustPublishIndexImage
          value: $(tasks.run-task.results.mustPublishIndexImage)
        - name: pipelineRunUid
          value: $(context.pipelineRun.uid)
        - name: internalRequestResultsFile
          value: $(tasks.run-task.results.internalRequestResultsFile)
        - name: indexImageDigests
          value: $(tasks.run-task.results.indexImageDigests)
      workspaces:
        - name: data
          workspace: tests-workspace
      taskSpec:
        params:
          - name: isFbcOptIn
            type: string
          - name: mustPublishIndexImage
            type: string  
          - name: pipelineRunUid
            type: string
          - name: internalRequestResultsFile
            type: string
          - name: indexImageDigests
            type: string
        workspaces:
          - name: data
        steps:
          - name: check-result
            image: quay.io/konflux-ci/release-service-utils:0f82be4be43294b6a96846d87ef7f7c0b9e34267
            script: |
              #!/usr/bin/env bash
              #
              set -eux

              RESULTS_FILE="$(workspaces.data.path)/$(params.internalRequestResultsFile)"
              internalRequests="$(kubectl get internalrequest --sort-by=.metadata.creationTimestamp --no-headers \
                | xargs)"

              i=0
              for internalRequest in $internalRequests; do
                requestParams=$(kubectl get internalrequest "${internalRequest}" -o jsonpath="{.spec.params}")

                if [ "$(jq -r '.components[0].target_index' "$RESULTS_FILE")" != \
                  "quay.io/scoheb/fbc-target-index-testing:v4.12" ]; then
                  echo "targetIndex #1 does not match"
                  exit 1
                fi

                if [ "$(jq -r '.components[1].target_index' "$RESULTS_FILE")" != \
                  "quay.io/scoheb/fbc-target-index-testing:v4.13" ]; then
                  echo "targetIndex #2 does not match"
                  exit 1
                fi

                fromIndex="quay.io/scoheb/fbc-index-testing:latest"
                if [ "$(jq -r '.fromIndex' <<< "${requestParams}")" != "${fromIndex}" ]; then
                  echo "fromIndex does not match"
                  exit 1
                fi

                if [ "$(jq -r '.buildTimeoutSeconds' <<< "${requestParams}")" != "420" ]
                then
                  echo "buildTimeoutSeconds does not match"
                  exit 1
                fi

                if [ "$(jq -r '.fbcFragment' <<< "${requestParams}")" != "registry.io/image${i}@sha256:0000" ]
                then
                  echo "fbcFragment does not match"
                  exit 1
                fi

                if [ "$(jq -r '.taskGitUrl' <<< "${requestParams}")" != "http://localhost" ]; then
                  echo "taskGitUrl image does not match"
                  exit 1
                fi

                if [ "$(jq -r '.taskGitRevision' <<< "${requestParams}")" != "main" ]; then
                  echo "taskGitRevision image does not match"
                  exit 1
                fi

                if [ "$(params.mustPublishIndexImage)" != "false" ]; then
                  echo "Unexpected value for mustPublishIndexImage: $(params.mustPublishIndexImage)"
                  exit 1
                fi

                if [ "$(params.isFbcOptIn)" != "true" ]; then
                  echo "Unexpected value for fbc_opt_in: $(params.isFbcOptIn)"
                  exit 1
                fi
                i=$(( i+1 ))
              done
      runAfter:
        - run-task
  finally:
    - name: cleanup
      taskSpec:
        steps:
          - name: delete-crs
            image: quay.io/konflux-ci/release-service-utils:0f82be4be43294b6a96846d87ef7f7c0b9e34267
            script: |
              #!/usr/bin/env sh
              set -eux
              
              kubectl delete internalrequests --all
