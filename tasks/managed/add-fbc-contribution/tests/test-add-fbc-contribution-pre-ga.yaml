---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-add-fbc-contribution-pre-ga
spec:
  description: Test the add-fbc-contribution task InternalRequest creation using
    pre-GA data.fbc parameters
  workspaces:
    - name: tests-workspace
  tasks:
    - name: setup
      workspaces:
        - name: data
          workspace: tests-workspace
      taskSpec:
        workspaces:
          - name: data
        steps:
          - name: setup-values
            image: quay.io/konflux-ci/release-service-utils:0f82be4be43294b6a96846d87ef7f7c0b9e34267
            script: |
              #!/usr/bin/env bash
              set -eux

              mkdir "$(workspaces.data.path)/results"
              cat > "$(workspaces.data.path)/snapshot_spec.json" << EOF
              {
                "application": "myapp",
                "components": [
                  {
                    "name": "comp0",
                    "containerImage": "registry.io/image0@sha256:0000",
                    "repository": "prod-registry.io/prod-location0",
                    "updatedTargetIndex": "quay.io/scoheb/fbc-target-index-testing:v4.13",
                    "ocpVersion": "v4.13"
                  }
                ]
              }
              EOF

              cat > "$(workspaces.data.path)/data.json" << EOF
              {
                "fbc": {
                  "fbcPublishingCredentials": "test-fbc-publishing-credentials",
                  "preGA": "true",
                  "productName": "pre-ga-product",
                  "productVersion": "v2",
                  "buildTimeoutSeconds": 420
                }
              }
              EOF
    - name: run-task
      taskRef:
        name: add-fbc-contribution
      params:
        - name: fromIndex
          value: "quay.io/scoheb/fbc-index-testing:latest"
        - name: targetIndex
          value: "quay.io/scoheb/fbc-target-index-testing:v4.12"
        - name: pipelineRunUid
          value: $(context.pipelineRun.uid)
        - name: snapshotPath
          value: snapshot_spec.json
        - name: dataPath
          value: data.json
        - name: resultsDirPath
          value: results
        - name: taskGitUrl
          value: "http://localhost"
        - name: taskGitRevision
          value: "main"
      workspaces:
        - name: data
          workspace: tests-workspace
      runAfter:
        - setup
    - name: check-result
      params:
        - name: pipelineRunUid
          value: $(context.pipelineRun.uid)
        - name: internalRequestResultsFile
          value: $(tasks.run-task.results.internalRequestResultsFile)
        - name: indexImageDigests
          value: $(tasks.run-task.results.indexImageDigests)
      workspaces:
        - name: data
          workspace: tests-workspace
      taskSpec:
        params:
          - name: pipelineRunUid
            type: string
          - name: internalRequestResultsFile
            type: string
          - name: indexImageDigests
            type: string
        steps:
          - name: check-result
            image: quay.io/konflux-ci/release-service-utils:0f82be4be43294b6a96846d87ef7f7c0b9e34267
            script: |
              #!/usr/bin/env bash
              #
              set -eux

              RESULTS_FILE="$(workspaces.data.path)/$(params.internalRequestResultsFile)"
              internalRequest="$(kubectl get internalrequest --sort-by=.metadata.creationTimestamp --no-headers | \
                tac | tail -1)"

              internalRequest=$(echo "${internalRequest}" | xargs)
              requestParams=$(kubectl get internalrequest "${internalRequest}" -o jsonpath="{.spec.params}")
              serviceAccount="$(kubectl get internalrequest "${internalRequest}" -o jsonpath="{.spec.serviceAccount}")"

              if [ "${serviceAccount}" != "release-service-account" ]; then
                echo "service account does not match"
              fi

              if [ "$(jq -r '.fromIndex' <<< "${requestParams}")" != "quay.io/scoheb/fbc-index-testing:latest" ]; then
                echo "fromIndex does not match"
                exit 1
              fi

              if [ "$(jq -r '.buildTimeoutSeconds' <<< "${requestParams}")" != "420" ]
              then
                echo "buildTimeoutSeconds does not match"
                exit 1
              fi

              if [ "$(jq -r '.fbcFragment' <<< "${requestParams}")" != "registry.io/image0@sha256:0000" ]
              then
                echo "fbcFragment does not match"
                exit 1
              fi

              if [ "$(jq -r '.taskGitUrl' <<< "${requestParams}")" != "http://localhost" ]; then
                echo "taskGitUrl image does not match"
                exit 1
              fi

              if [ "$(jq -r '.taskGitRevision' <<< "${requestParams}")" != "main" ]; then
                echo "taskGitRevision image does not match"
                exit 1
              fi

              TS=1696946200 # ts set in the mocked `date`
              if [ "$(jq -r '.components[].target_index' "$RESULTS_FILE")" != \
                "quay.io/scoheb/fbc-target-index-testing:v4.13-pre-ga-product-v2-${TS}" ]; then
                echo "targetIndex does not match"
                exit 1
              fi

              num_images=$(wc -w <<< "$(jq -r '.components[].image_digests[]' "$RESULTS_FILE")")
              if [ "$num_images" -ne 2 ]; then
                echo "Unexpected value for number of image digests: $num_images"
                exit 1
              fi
      runAfter:
        - run-task
  finally:
    - name: cleanup
      taskSpec:
        steps:
          - name: delete-crs
            image: quay.io/konflux-ci/release-service-utils:0f82be4be43294b6a96846d87ef7f7c0b9e34267
            script: |
              #!/usr/bin/env sh
              set -eux

              kubectl delete internalrequests --all
