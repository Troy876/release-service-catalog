---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-update-fbc-catalog-multiple-fragments-retry
spec:
  description: |
    Tests the retry scenario of the pipeline when using multiple fragments in the fbcFragments array. This test
    validates the retry logic when there's an existing build for one of the fragments in the array, ensuring that
    the task can detect previous builds using any fragment from the array and handle retry appropriately. The behavior
    in this test is determined by the test name.
  tasks:
    - name: run-task
      taskRef:
        name: update-fbc-catalog-task
      params:
        - name: fbcFragments
          value: '["registry.io/image0@sha256:0000", "registry.io/image1@sha256:1111"]'
        - name: fromIndex
          value: "quay.io/scoheb/fbc-index-testing:latest"
        - name: targetIndex
          value: "quay.io/fbc/catalog:complete"
        - name: buildTags
          value: "[]"
        - name: addArches
          value: "[]"
        - name: iibServiceAccountSecret
          value: "iib-service-account-secret"
        - name: publishingCredentials
          value: "publishing-credentials"
    - name: check-result
      params:
        - name: jsonBuildInfo
          value: $(tasks.run-task.results.jsonBuildInfo)
        - name: buildState
          value: $(tasks.run-task.results.buildState)
        - name: genericResult
          value: $(tasks.run-task.results.genericResult)
        - name: indexImageDigests
          value: $(tasks.run-task.results.indexImageDigests)
        - name: iibLog
          value: $(tasks.run-task.results.iibLog)
        - name: exitCode
          value: $(tasks.run-task.results.exitCode)
      taskSpec:
        params:
          - name: jsonBuildInfo
            type: string
          - name: buildState
            type: string
          - name: genericResult
            type: string
          - name: indexImageDigests
            type: string
          - name: iibLog
            type: string
          - name: exitCode
            type: string
        steps:
          - name: check-result
            image: quay.io/konflux-ci/release-service-utils:7a1d88df0e5aa21f6219db2a8732af87eed7ed73
            env:
              - name: BUILD_STATE
                value: $(params.buildState)
              - name: GENERIC_RESULT
                value: $(params.genericResult)
              - name: JSON_BUILDINFO
                value: $(params.jsonBuildInfo)
            script: |
              #!/bin/bash
              set -x

              # the jsonBuild mocks has 13 keys on it for retry scenarios
              keyLength=$(jq '. | length' <<< "${JSON_BUILDINFO}")
              if [ "$keyLength" -ne 13 ]; then
                echo "The task did not save a valid json in jsonBuildInfo result"
                exit 1
              fi

              mock_case=$(jq -r '.mock_case' <<< "${JSON_BUILDINFO}")
              if [[ ! "${mock_case}" =~ .*retry-complete.* ]]; then
                echo "The task did not test the correct case for multiple fragments retry" \
                  "(expected: retry-complete, got: $mock_case)"
                exit 1
              fi

              state="$(jq -cr .state <<< "${BUILD_STATE}")"
              if [ "$state" != "complete" ]; then
                echo "The task did not save a completed IIB build in buildState result"
                exit 1
              fi

              genericResult=$(jq -cr \
                '. |[.fbc_opt_in, .overwrite_fromindex_image, .publish_index_image,.sign_index_image] |@csv' \
                <<< "${GENERIC_RESULT}")
              if [ "$genericResult" != '"true","true","true","true"' ]; then
                echo "The task did not save the correct values in genericResult result"
                exit 1
              fi

              if [ "$(params.indexImageDigests)" != "sha256:000 sha256:001" ]; then
                echo "The task did not save a valid digest image in the indexImageDigests result"
                exit 1
              fi

              iibLog=$(awk '{match($0, /https.*/); print(substr($0, RSTART)) }' <<< "$(params.iibLog)")
              if [  "$iibLog" != "https://fakeiib.host/api/v1/builds/1/logs" ]; then
                echo "The task did not save a valid iib log url in the iibLog result"
                exit 1
              fi

              if [ "$(params.exitCode)" != "0" ]; then
                echo "The task did not finish with a successful exit code"
                exit 1
              fi

              # Verify that the retry logic worked for multiple fragments
              # Check that either fbc_fragments array matches or one of the individual fragments matches
              fbc_fragments=$(jq -r '.fbc_fragments' <<< "${JSON_BUILDINFO}")
              if [ "$fbc_fragments" != "null" ]; then
                fragment_count=$(jq '. | length' <<< "$fbc_fragments")
                if [ "$fragment_count" -lt 1 ]; then
                  echo "The task retry did not preserve fragment information correctly"
                  exit 1
                fi
              fi
      runAfter:
        - run-task