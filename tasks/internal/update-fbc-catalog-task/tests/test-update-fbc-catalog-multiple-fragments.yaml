---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-update-fbc-catalog-multiple-fragments
spec:
  description: |
    Tests the pipeline using multiple fragments in the fbcFragments array parameter. This test validates that
    the task correctly processes multiple FBC fragments in a single IIB build request, including validation of
    format, processing multiple fragments for opm render, and checking fbc opt-in for all fragments.
  tasks:
    - name: run-task
      taskRef:
        name: update-fbc-catalog-task
      params:
        - name: fbcFragments
          value: |
            ["registry.io/image0@sha256:0000", "registry.io/image1@sha256:1111", "registry.io/image2@sha256:2222"]
        - name: fromIndex
          value: "quay.io/scoheb/fbc-index-testing:latest"
        - name: targetIndex
          value: "quay.io/fbc/catalog:test"
        - name: buildTags
          value: "[]"
        - name: addArches
          value: "[]"
        - name: iibServiceAccountSecret
          value: "iib-service-account-secret"
        - name: publishingCredentials
          value: "publishing-credentials"
    - name: check-result
      params:
        - name: jsonBuildInfo
          value: $(tasks.run-task.results.jsonBuildInfo)
        - name: buildState
          value: $(tasks.run-task.results.buildState)
        - name: genericResult
          value: $(tasks.run-task.results.genericResult)
        - name: indexImageDigests
          value: $(tasks.run-task.results.indexImageDigests)
        - name: iibLog
          value: $(tasks.run-task.results.iibLog)
        - name: exitCode
          value: $(tasks.run-task.results.exitCode)
      taskSpec:
        params:
          - name: jsonBuildInfo
            type: string
          - name: buildState
            type: string
          - name: genericResult
            type: string
          - name: indexImageDigests
            type: string
          - name: iibLog
            type: string
          - name: exitCode
            type: string
        steps:
          - name: check-result
            image: quay.io/konflux-ci/release-service-utils:9c82b0f13e40e76150835b628c86ce05ae95a366
            env:
              - name: BUILD_STATE
                value: $(params.buildState)
              - name: GENERIC_RESULT
                value: $(params.genericResult)
              - name: JSON_BUILDINFO
                value: $(params.jsonBuildInfo)
            script: |
              #!/bin/bash
              set -x

              # Decompress jsonBuildInfo since task now uses compression
              decompressed_json="$(base64 -d <<< "${JSON_BUILDINFO}" | gunzip)"
              
              # the jsonBuild mocks has 12 keys on it
              keyLength=$(jq '. | length' <<< "${decompressed_json}")
              if [ "$keyLength" -ne 12 ]; then
                echo "The task did not save a valid json in jsonBuildInfo result"
                exit 1
              fi

              state="$(jq -cr .state <<< "${BUILD_STATE}")"
              if [ "$state" != "complete" ]; then
                echo "The task did not save a completed IIB build in buildState result"
                exit 1
              fi

              genericResult=$(jq -cr \
                '. |[.fbc_opt_in, .overwrite_fromindex_image, .publish_index_image,.sign_index_image] |@csv' \
                <<< "${GENERIC_RESULT}")
              if [ "$genericResult" != '"true","true","true","true"' ]; then
                echo "The task did not save the correct values in genericResult result"
                exit 1
              fi

              if [ "$(params.indexImageDigests)" != "sha256:000 sha256:001" ]; then
                echo "The task did not save a valid digest image in the indexImageDigests result"
                exit 1
              fi

              iibLog=$(awk '{match($0, /https.*/); print(substr($0, RSTART)) }' <<< "$(params.iibLog)")
              if [  "$iibLog" != "https://fakeiib.host/api/v1/builds/1/logs" ]; then
                echo "The task did not save a valid iib log url in the iibLog result"
                exit 1
              fi

              if [ "$(params.exitCode)" != "0" ]; then
                echo "The task did not finish with a successful exit code"
                exit 1
              fi

              # Verify that multiple fragments were processed correctly
              # The IIB request should contain fbc_fragments array with multiple elements
              fbc_fragments=$(jq -r '.fbc_fragments' <<< "${decompressed_json}")
              if [ "$fbc_fragments" = "null" ]; then
                echo "The task did not save fbc_fragments in the build info"
                exit 1
              fi

              fragment_count=$(jq '. | length' <<< "$fbc_fragments")
              if [ "$fragment_count" -ne 3 ]; then
                echo "The task did not process the expected number of fragments (expected: 3, got: $fragment_count)"
                exit 1
              fi
      runAfter:
        - run-task