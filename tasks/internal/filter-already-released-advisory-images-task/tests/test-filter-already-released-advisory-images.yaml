---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-filter-already-released-advisory-images
spec:
  description: |
    Test the filter-already-released-advisory-images-task by providing a snapshot with
    both released and new images. Expect only the new image after filtering.
  tasks:
    - name: run-filter-task
      taskRef:
        name: filter-already-released-advisory-images-task
      params:
        - name: snapshot_json
          value: '{"components":[{"name":"released-component","version":"1.0.0","containerImage":"quay.io/test/released-image:1.0.0","tags":["v1.0"],"repository":"quay.io/test"},{"name":"new-component","version":"1.0.0","containerImage":"quay.io/test/new-image:1.0.0","tags":["v1.0"],"repository":"quay.io/test"}]}'
        - name: origin
          value: "test-origin"
        - name: advisory_secret_name
          value: "filter-already-released-advisory-images-secret"
        - name: internalRequestPipelineRunName
          value: "$(context.pipelineRun.name)"
    - name: validate-result
      runAfter:
        - run-filter-task
      params:
        - name: result
          value: "$(tasks.run-filter-task.results.result)"
        - name: unreleased_components
          value: "$(tasks.run-filter-task.results.unreleased_components)"
      taskSpec:
        params:
          - name: result
            type: string
          - name: unreleased_components
            type: string
        steps:
          - name: validate
            image: quay.io/konflux-ci/release-service-utils:26e22ecf2c23e7ec8134fede3b40a6e6aef8ac20
            script: |
              #!/usr/bin/env bash
              set -eux

              echo "Validating filter task result..."

              if [[ "$(params.result)" != "Success" ]]; then
                echo "Task result was not Success: $(params.result)"
                exit 1
              fi

              # Verify unreleased components list
              UNRELEASED_COUNT=$(jq 'length' <<< '$(params.unreleased_components)')
              if [[ "$UNRELEASED_COUNT" -ne 1 ]]; then
                echo "Expected 1 unreleased component, but found $UNRELEASED_COUNT"
                exit 1
              fi

              UNRELEASED_NAME=$(jq -r '.[0]' <<< '$(params.unreleased_components)')
              if [[ "$UNRELEASED_NAME" != "new-component" ]]; then
                echo "Unexpected unreleased component name: $UNRELEASED_NAME"
                exit 1
              fi

              echo "Validation successful!"
