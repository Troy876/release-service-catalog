---
name: Promote branch
on:
  workflow_dispatch:
    inputs:
      promotion-type:
        description: The type of promotion to perform
        type: choice
        required: true
        default: development-to-staging
        options:
          - development-to-staging
          - staging-to-production
      force-to-staging:
        description: |
          Force to staging: Allow promotion to staging even if staging and production differ
        type: boolean
        required: true
        default: false
      override:
        description: |
          Override: Allow promotion to production even if the change has not been in staging for one
          week
        type: boolean
        required: true
        default: false
      dry-run:
        description: |
          Dry run: Print out the changes that would be promoted but do not perform the git push
        type: boolean
        required: true
        default: false
      send-email-report:
        description: |
          Send email report: Generate and send AI-powered email report after promotion
        type: boolean
        required: true
        default: false
jobs:
  promote-branch:
    name: Promote Branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955  # v4
        with:
          fetch-depth: 0  # Fetch full history for commit analysis
      
      - name: Run branch promotion script
        id: promote
        run: |
          .github/scripts/promote_branch.sh --promotion-type $PROMOTION_TYPE --force-to-staging $FORCE \
            --override $OVERRIDE --dry-run $DRY
        env:
          PROMOTION_TYPE: ${{ inputs.promotion-type }}
          FORCE: ${{ inputs.force-to-staging }}
          OVERRIDE: ${{ inputs.override }}
          DRY: ${{ inputs.dry-run }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      
      - name: Set up Python
        if: |
          steps.promote.outcome == 'success' && 
          inputs.send-email-report == true
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        if: |
          steps.promote.outcome == 'success' && 
          inputs.send-email-report == true
        run: |
          python -m pip install --upgrade pip
          pip install requests pyyaml markdown google-generativeai
      
      - name: Generate promotion report
        if: |
          steps.promote.outcome == 'success' && 
          inputs.send-email-report == true
        run: |
          # Determine source and target branches
          if [ "${{ inputs.promotion-type }}" = "development-to-staging" ]; then
            FROM_BRANCH="development"
            TO_BRANCH="staging"
          else
            FROM_BRANCH="staging"
            TO_BRANCH="production"
          fi
          
          # Create secret files securely
          echo "${{ secrets.GEMINI_API_KEY }}" > /tmp/gemini_api_key
          echo "${{ secrets.SMTP_USERNAME }}" > /tmp/smtp_username  
          echo "${{ secrets.SMTP_PASSWORD }}" > /tmp/smtp_password
          echo "${{ secrets.GH_TOKEN }}" > /tmp/gh_token
          chmod 600 /tmp/gemini_api_key /tmp/smtp_username /tmp/smtp_password /tmp/gh_token
          
          # Generate the promotion report
          python .github/scripts/generate_promotion_report.py $FROM_BRANCH $TO_BRANCH
          
          # Clean up secret files
          rm -f /tmp/gemini_api_key /tmp/smtp_username /tmp/smtp_password /tmp/gh_token
        env:
          # Non-sensitive configuration
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
          EMAIL_TO: ${{ secrets.EMAIL_TO }}
          # Sensitive secrets mounted as files per security team recommendation
          GEMINI_API_KEY_FILE: /tmp/gemini_api_key
          SMTP_USERNAME_FILE: /tmp/smtp_username
          SMTP_PASSWORD_FILE: /tmp/smtp_password
          GH_TOKEN_FILE: /tmp/gh_token
